<!--#include virtual="/ssi/header.shtml" -->
<!--#exec cgi="/cgi-bin/simple-h1.cgi" -->
    <div id="main">
      <h1>Having only public methods inside a JS object</h2>
      <p>
        If you want all your object methods to be public (or don't
        mind them being public), you can simply define:
      </p>
<pre class="prettyprint"><!--#include virtual="public-methods.js" --></pre>
      <p>
        The advantage here, is that you don't need any <code>new
        function</code> or <code>return this inside your
        object</code>. Also, you don't need any
        <code>MyGreatObject.</code> or <code>this.</code> prefix to
        your public methods.
      </p>
      <p>
        For most cases, I find this approach the neatest; I don't mind
        that all of my methods are accessible to callees.
      </p>
      <h2>Having both private and public methods inside a JS object</h2>
      <p>
        This is my preferred way of mixing private and public methods
        in a JavaScript object. The advantage is obviously that you don't expose more methods to the outside world than you strictly need to.
      </p>
<pre class="prettyprint"><!--#include virtual="public-and-private-methods.js" --></pre>
    </div>
<!--#include virtual="/ssi/footer.shtml" -->
