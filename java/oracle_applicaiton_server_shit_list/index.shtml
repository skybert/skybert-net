<!--#include virtual="/ssi/header.shtml" -->
      <h1>My Oracle Application Server Shit List</h1>
      <div id="main">
         <p class="reg">
           Things that are HUGELY annoying when working with Oracle
           Application Server.
         </p>
         <h2>
           Creating a new OCJ4 instance throws password expcetions
         </h2>
         <p>
           When creating a new OC4J instance with
           <code>./bin/createinstance -instanceName myInstance</code>
           you're prompted for admin password of that instance, i.e. a
           new passowrd. Now,
           if you enter something different than the main Oracle admin
           password, it throws tons of exceptions!
         </p>
         <p>
           To make matters
           worse, the instance is in spite of the exceptions
           created. You can start it, but you can't do much more as
           it's non functional. The only remedy here, is to stop it,
           remove it and add it again - this time with the same
           password as <code>oc4jadmin</code>
         </p>
         <h2>You cannot install OAS without a graphical display</h2>
         <p>
           This is the most stupid thing - ever! You connot run the
           installer with having X installed, and having access to
           it. This is so stupid only a windows person could have made
           it. How many Unix server programs have you installed that
           require a GUI? 
         </p>
         <h2>
           Oracle's default connection pool does not handle a query that
           fails.          
         </h2>
         <p>
           Oracle's default connection pool does not handle a query that
           fails. Instead, it gives a "socket write error".
         </p>
         <h2>It's impossible to update jar files while OC4J is running</h2>
         <p>
           With all other app servers, you can upgrade a jar file
           while the server is running, the new jar file first be
           activated with a restart.
         </p>
         <p>
          With OAS, you always need to take down the OC4J instance
          when updating a library. This is <strong>hugely</strong>
          annoying when working in <em>both</em> production and
          development environments.
         </p>
         <h2>It doesn't read properties files in CLASSPATH</h2>
         <p>
           Typically, you write your log4j (logging) configuration in
           a properties file that is put in the appserver's
           CLASSPATH. Editing the configuration is then only a matter
           of editing the properties file.
         </p>
         <p>
           With OAS, you have to put the properties file in a jar,
           which then is put into the OC4J classpath. Now, when you
           know that OC4J doesn't let you update jars while running,
           you'll relaise the sad fact that you have to stop the OC4J
           instance just to update your logging configuration!
         </p>
         <h2>The logs don't rotate per default</h2>
         <p>
           You need to configure rotating of the logs for
           <em>each</em> OC4J instance. This you must do in six
           XML files - one is not enough. Furthermore, it's impossible
           to rotate the main log file - for this you need two patches
           (!) from Oracle. See <a
           href="viewpage.py.cgi?computers+appservers+oracle_application_server">
             my notes on OAS
           </a>
           for a walkthrough on how to enable rotation on all OAS
           logs.
         </p>
         <h2>
           You cannot install OAS into a directory which contain
           anything but letters
         </h2>
         <p>
           This means that a standard install
             directory name of <code>program-version</code> is
             impossible! So, instaed of installing OAS into, say
             <code>/opt/soa-10.0.1.3</code>, you have to go with
             something simpler, e.g. <code>
             /opt/oas
             </code>.
         </p>
         <p>
           Now, this means that you cannot have multiple
           versions of OAS installed, and a symlink pointing to the
           current one as you would with any other Unix program on
           the globe!
         </p>
         <p>
           To illustrate what I want:
         </p>
<pre class="code">
  /opt/oas-10.1.1.1
  /opt/oas-10.2.1.1
  /opt/oas -> /opt/oas-10.2.1.1
</pre>
      </div>
<!--#include virtual="/ssi/footer.shtml" -->
