<!--#include virtual="/ssi/header.shtml" -->
      <h1>Varnish</h1>
      <div id="main">
<!--#exec cgi="/cgi-bin/article-list.cgi" -->
         <p class="reg">
           Varnish is my faviourite cache server, here I list bits and
           pieces on that I've picked up when working with this very
           fast and sparsely documented cache server.
         </p>
         <h2>Find the least cached URIs</h2>
         <p>
           To improve your cache hit ratio, the best thing to do is to
           use <code>varnishtop</code> to see the URIs that are the
           most often fetched from the back end server:
         </p>
         <pre class="code">varnishtop -i TxURL</pre>
         <h2>Conditional removal of headers</h2>
         <p>
           A lot of J2EE applications need the Session object, which
           is identified in the CGI world by the HTTP header
           <code>jsessionid</code> or <code>JSESSIONID</code>.
         </p>
         <p>
           However, what we often want to do, is to remove it
           alltogehter (and caching the request) and only keep it for
           requests that <em>really </em> need it (i.e. applications
           that make use of the Session object</code>
         </p>
<pre class="code">
sub vcl_fetch() {  
  // keep it 
  if (req.url ~ "^/forum/" || req.url ~ "^/shop/") {
    pass;
  }
  // remove the rest
  elsif (obj.http.Set-Cookie ~ "JSESSION") {
    remove obj.http.Set-Cookie;
  }
}
</pre>
         <h2>Varnish doesn't start</h2>
<pre class="code">
  Assert error in main(), varnishd.c line 632:
  Condition((daemon(1, d_flag)) == 0) not true.
  errno = 19 (No such device
</pre>
         <p>
           The reason was that <code>/dev/null</code> wasn't a
           character device. To fix this, I did:
         </p>
<pre class="code">
  # rm /dev/null
  # mknod -m 666 /dev/null c 1 3
</pre>
         <h2>Varnish doesn't start on SLES</h2>
         <p>
           I had problems starting a self compiled varnish 2.0.2
           running on SLES 10SP2. It configured, was built and
           installed just fine, but din't start. Running
           <code>varnishd</code>with -F I saw an error containing
           <cite>socket(): Address family not supported by protocol,
           Assert error in mgt_cli_telnet(), mgt_cli.c line 478:
           </cite>
         </p>
         <p>
           Running <code>strace</code> on <code>varnishd</code> give
           me a hunch that this has something to do with IPv6 (believe
           it or not). SLES has turned off IPv6 support per default
           and Varnish can therefore not understand command line
           parameters defining ports and hosts for running the cache
           server and admin interface on the form "localhost:80".
           Installing the <code>ipv6</code> kernel module with
           <code>insmod</code> didn't remedy the situation.
         </p>
         <p>
           The solution was to use a different format when entering
           hosts in the <code>varnishd</code> parameters. On the SLES
           system, I set replaced the parameters in
           <code>/etc/sysconfig/varnish</code> from
         </p>
<pre class="code">
DAEMON_OPTS="-a :81 \
              -T localhost:6082 \
              -f /etc/varnish/geronimo.vcl \
              -s file,/usr/local/var/lib/varnish/$INSTANCE/varnish_storage.bin,1G"  
</pre>
         <p>
           to:
         </p>
<pre class="code">
DAEMON_OPTS="-a :81 \
              -T 0.0.0.0:6082 \
              -f /etc/varnish/geronimo.vcl \
              -s file,/usr/local/var/lib/varnish/$INSTANCE/varnish_storage.bin,1G"  
</pre>
         <p>
           A big thanks goes to mithrandir at #varnish on
           <a href="irc://irc.linpro.no">irc.linpro.no!</a>
         </p>
      </div>
<!--#include virtual="/ssi/footer.shtml" -->
