#+title: Migrating to JBoss EPA 6.2
Here's some notes I've made when migrating from JBoss 4 to JBoss 7,
more specifically, targeting JBoss EAP 6.2.

** Annotations

*** Use this dependency in your POM
#+begin_src nxml
<dependency>
  <groupId>org.jboss.ejb3</groupId>
  <artifactId>jboss-ejb3-ext-api</artifactId>
  <version>2.1.0.redhat-1</version>
</dependency>
#+end_src

*** Update the imports

Use the corresponding annotations in =org.jboss.ejb3.annotation= instead
of =org.jboss.annotation.ejb=:
#+begin_src text
$ find -name *.java | xargs sed -i s/org.jboss.annotation.ejb/org.jboss.ejb3.annotation/g
#+end_src

** Hibernate

*** Update the imports and class names
Classes and packages have been moved around in Hibernate 4 which is a
part of EAP 6.2:

#+begin_src text
$ find -name *.java | xargs sed -i -f migrate-hibernate-3-to-4.sed
#+end_src

**** The contents of migrate-hibernate-3-to-4.sed
#+begin_src text
s#org.hibernate.collection.PersistentCollection#org.hibernate.collection.spi.PersistentCollection#g
s#org.hibernate.engine.SessionImplementor#org.hibernate.engine.spi.SessionImplementor#g
s#org.hibernate.classic.Session#org.hibernate.Session#g

# jdbc
s#<groupId>jboss-common-jdbc-wrapper</groupId>#<groupId>org.jboss.ironjacamar</groupId>#g
s#<artifactId>jboss-common-jdbc-wrapper</artifactId>#<artifactId>ironjacamar-jdbc</artifactId>#
s#org.jboss.resource.adapter.jdbc.ValidConnectionChecker#org.jboss.jca.adapters.jdbc.spi.ValidConnectionChecker#g
s#org.jboss.resource.adapter.jdbc.ExceptionSorter#org.jboss.jca.adapters.jdbc.spi.ExceptionSorter#g
#+end_src

** Debugging problems with global modules
Often, you want to add global JBoss modules to make libraries
available to multiple applications. If these modules have
dependencies on other modules, this must be explicitly declared.

Here's an example of a module which lacks a dependency in its
=module.xml=:
#+begin_src text
  Caused by: java.lang.ClassNotFoundException:
  org.xml.sax.helpers.DefaultHandler from [Module "net.sf.ehcache:main"
  from local module loader @29db197 (finder: local module finder
  @3ef631d8 (roots:
  /opt/jboss-eap-6.2/modules,/opt/jboss-eap-6.2/modules/system/layers/base))]
#+end_src

It turned out that the module's descriptor in
=/opt/jboss-eap-6.2/modules/net/sf/ehcache/main/module.xml=
missed some dependencies.

I always use [[https://github.com/skybert/moria/blob/master/src/java/find-jar][find-jar]] for locating the JARs containing any missing
classes, resource bundles or XML descriptors. It works a lot like GNU
=find=:

#+begin_src text
$ find /opt/jboss-eap-6.2 org.xml.sax.helpers.DefaultHandler
#+end_src

It not only will list any JAR files containing the class in question,
it will also present any matching results within that JAR file (se
it's *much* better than =grep -r org.xml.sax.helpers.DefaultHandler <dir>)=





