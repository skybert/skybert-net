#+title: Non Greedy Matching in sed

If you've used =sed= for a while, you've probably encountered the
problem that all your (group) matches are greedy. This is easy to
illustrate with an example:

Say you have this text, where you want to convert the java classes
surrounded with @-signs into HTML =<code/>= elements:

#+begin_src text
The @HashMap@ and @ArrayList@ classes are great!
#+end_src

To convert this into HTML, you'd typically create groups and wrap
these two inside =<code>= elements:

#+begin_src sh
echo 'The @HashMap@ and @ArrayList@ classes are great!' | sed 's#@\(.*\)@#<code>\1</code>#g'
#+end_src

However, =sed= will always do a greedy search, matching the _longest_
possible match, not quiet yielding the result you want:

#+begin_src nxml
The <code>HashMap@ and @ArrayList</code> classes are great!
#+end_src

** The solution
What you need to do, is to match against everything _but_ the closing
delimiter, in our case, the '@'. This is done with the character group
notation and the negator =^= in front of the closing delimiter:

#+begin_src sh
@\([^@]*\)@
#+end_src

Now, we get what we want with both java classes wrapped in HTML
=<code>= elements:

#+begin_src sh
echo 'The @HashMap@ and @ArrayList@ classes are great!' | sed 's#@\([^@]*\)@#<code>\1</code>#g'
The <code>HashMap</code> and <code>ArrayList</code> classes are great!
#+end_src

There, another sed mystery solved. Yeah!
