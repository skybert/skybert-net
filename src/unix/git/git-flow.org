#+title: Using git flow

This is a thin layer on top of =git= to help you follow some
best practises about branching and merging when doing large scale
development with git, having multiple release branches, hotfixes,
feature branches, stable and unstable version of your source code and
so on.

* Creating a release

Here, I'm using git flow to create a release named =1.0=, also using
the =mvn versions= feature:

#+BEGIN_SRC text
$ git flow release start 1.0
$ mvn versions:set -DnewVersion=1.0
$ mvn versions:commit
$ git commit -a -m "- Setting project version to 1.0"
$ git flow release finish 1.0
$ git push --tags
#+END_SRC

* Creating a hot fix

This is very similar to creating a release:

#+BEGIN_SRC text
$ git flow hotfix start 1.01
#+END_SRC

Make your changes, then:

#+BEGIN_SRC text
=======
  <make code changes>
$ git commit -a -m "Puppet fix for JBoss bind interface"
$ git flow hotfix finish 1.01
$ git push origin 1.01
#+END_SRC

* Creating a feature branch
#+begin_src text
$ git flow feature start my-great-feature

# Often, you also want to publish the branch you're working on (optional)
$ git push -u origin my-great-feature

$ git flow feature finish my-great-feature
#+end_src
