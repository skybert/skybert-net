<!--#include virtual="/ssi/header.shtml" -->
    <h1>Creating an SSH key on Windows</h1>
    <div id="main">
      <p>
        I've been through this so many times with people running
        Windows so that I want to put this down to paper.
      </p>
      <h2>Install Cygwin &amp; its SSH Package</h2>
      <p>
        Install <a href="http://cygwin.com">Cygwin</a> and be sure
        to check for the <code>openssh-client</code> package while
        running <code>setup.exe</code>
      </p>
      <img src="openssh.png"
           alt="cygwin setup.exe"/>
      <h2>
        Generate the key using the Cygwin shell
      </h2>
      <p>
        You can now run standard <code>ssh</code> commands that you
        see documented on the plethora of Linux and Unix websites on
        the internet. Right now, the command you really want to run
        is:
        <pre>$ ssh-keygen -t rsa</pre>
      </p>
      <p>
        I recommend entering a password so that in case someone
        steals your key, they still cannot use it.
      </p>
      <p>
        This key, found in <code>~/.ssh/id_rsa.pub</code> can now be
        added to the <code>~/.ssh/authorized_keys</code> file on the
        servers on which you want to log into.
      </p>
      <h2>But: Can't I just not use PuTTY to generate the keys?</h2>
      <p>
        PuTTY is an excellent SSH client, but I would not recommend
        using its <a
        href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">
        key generator</a> as I've seen so many cases where it doesn't
        create proper keys for using with Linux/Unix OpenSSH servers.
      </p>
      <p>
        This has at least been my experience with at least five
        Windows users so I've stopped asking people to use PuTTY to
        create their keys. It is probably possible to create proper
        keys with PuTTY, but my experience is very bad with this and
        I'd therefore recommend using Cygwin and
        <code>ssh-keygen</code> instead.
      </p>
      <h2>Making use of your new key</h2>
      <p>
        Since you now have Cygwin and <code>ssh</code> on your
        machine, you can just use the Cygwin shell and follow the
        standard Unix way and add the key with <code>ssh-add</code>
        and use <code>ssh</code> afterwards. If using Cygwin, I
        seriously recommend using its <code>xterm</code> as it gives
        you a so much better shell than the Windows/DOS shell that
        cygwin standard wise is launched inside in: better fonts,
        better signal handling and <em>much</em> faster input and
        output buffer.
      </p>
      <p>
        If you prefer using PuTTY, there's a walkthrough on using <a
        href="http://www.howtoforge.com/ssh_key_based_logins_putty">PuTTY
        and its key agent</a> here. Rememer, you need to make a note
        of where the key you generated inside Cygwin is on the Windows
        file system, normaly, it's somewhere under
        <code>c:\cygwin\</code>...
      </p>
    </div>
<!--#include virtual="/ssi/footer.shtml" -->
